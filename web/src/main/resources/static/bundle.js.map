{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "app/main.js",
    "node_modules/dateformat/lib/dateformat.js",
    "node_modules/spin/spin.js"
  ],
  "names": [],
  "mappingspr
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var Spinner = require('spin');\r\nvar DateFormat = require('dateformat');\r\n\r\n+ function ($) {\r\n    'use strict';\r\n\r\n    // UPLOAD CLASS DEFINITION\r\n    // ======================\r\n\r\n    var dropZone = document.getElementById('drop-zone');\r\n    var uploadForm = document.getElementById('js-upload-form');\r\n    var histTable = $('#genHistoryTable').DataTable({\r\n        \"paging\":   false,\r\n        \"ordering\": false,\r\n        \"info\":     false,\r\n        \"searching\": false\r\n        });\r\n\r\n    // var spinner = new Spinner().spin($('#myModalContent')[0]);\r\n    // $(\".overlay\").fadeIn().append(spinner.el);\r\n    // $(\".overlay\").fadeIn();\r\n\r\n    var startUpload = function (files) {\r\n\r\n        // https://coligo.io/building-ajax-file-uploader-with-node/\r\n\r\n        if (files.length > 0) {\r\n            // One or more files selected, process the file upload\r\n\r\n            // create a FormData object which will be sent as the data payload in the\r\n            // AJAX request\r\n            var formData = new FormData();\r\n\r\n            // loop through all the selected files\r\n            for (var i = 0; i < files.length; i++) {\r\n                var file = files[i];\r\n\r\n                // add the files to formData object for the data payload\r\n                formData.append('file', file, file.name);\r\n                $.ajax({\r\n                    url: '/uploadFile',\r\n                    type: 'POST',\r\n                    data: formData,\r\n                    processData: false,\r\n                    contentType: false,\r\n                    success: function (data) {\r\n                        console.log('done');\r\n                        histTable.row.add( [\r\n                            data.company,    \r\n                            DateFormat(new Date(data.generationTime), \"yyyy-mm-dd HH:MM:ss\"),\r\n                            data.filename,\r\n                            \"<span class=\\\"btn btn-primary dlbtn\\\">Download<span>\"\r\n                        ]).draw(false);\r\n                        $(\"#modalTitle\").text(\"Generation Started\");\r\n                        $(\"#modalText\").html(\"When complete. please supply password <b>\" + data.password + \"</b> to the file <b>\" + data.filename + \"</b>\");\r\n                        $(\"#myModal\").modal(\"show\");\r\n                        // start processing\r\n                        // spinner.stop();\r\n                        // $(\".overlay\").fadeOut();\r\n                        // window.location.href = \"./out/yo2.docx\";\r\n                    },\r\n                    error: function (jqXHR, textStatus, errorThrown) {\r\n                        console.log('error');\r\n                        $(\"#modalTitle\").text(\"Upload Error\");\r\n                        $(\"#modalText\").text(\"See Server logs for details. textStatus=\" + textStatus + \" errorThrown=\" + errorThrown);\r\n                        $(\"#myModal\").modal(\"show\");\r\n                    }\r\n                    /*xhr: function() {\r\n                        // create an XMLHttpRequest\r\n                        var xhr = new XMLHttpRequest();\r\n\r\n                        // listen to the 'progress' event\r\n                        xhr.upload.addEventListener('progress', function(evt) {\r\n\r\n                        if (evt.lengthComputable) {\r\n                            // calculate the percentage of upload completed\r\n                            var percentComplete = evt.loaded / evt.total;\r\n                            percentComplete = parseInt(percentComplete * 100);\r\n\r\n                            // update the Bootstrap progress bar with the new percentage\r\n                            $('.progress-bar').text(percentComplete + '%');\r\n                            $('.progress-bar').width(percentComplete + '%');\r\n\r\n                            // once the upload reaches 100%, set the progress bar text to done\r\n                            if (percentComplete === 100) {\r\n                                $('.progress-bar').html('Done');\r\n                                // spinner.spin();\r\n                                $(\".overlay\").fadeIn().append(spinner.el);\r\n                                // new Spinner({color:'#999', lines: 12}).spin($(\".overlay\"));\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        }, false);\r\n\r\n                        return xhr;\r\n                    }*/\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    uploadForm.addEventListener('submit', function (f) {\r\n        var uploadFiles = document.getElementById('js-upload-files').files;\r\n        f.preventDefault()\r\n        startUpload(uploadFiles)\r\n    })\r\n\r\n    dropZone.ondrop = function (f) {\r\n        // prevent brower from really opening the file\r\n        f.preventDefault();\r\n        this.className = 'upload-drop-zone';\r\n        startUpload(f.dataTransfer.files)\r\n    }\r\n\r\n    dropZone.ondragover = function () {\r\n        this.className = 'upload-drop-zone drop';   // change css\r\n        return false;\r\n    }\r\n\r\n    dropZone.ondragleave = function () {\r\n        this.className = 'upload-drop-zone';\r\n        return false;\r\n    }\r\n\r\n    // We can attach the `fileselect` event to all file inputs on the page\r\n    $(document).on('change', ':file', function () {\r\n        var input = $(this),\r\n            numFiles = input.get(0).files ? input.get(0).files.length : 1,\r\n            label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\r\n        input.trigger('fileselect', [numFiles, label]);\r\n    });\r\n\r\n    // We can watch for our custom `fileselect` event like this\r\n    $(document).ready(function () {\r\n\r\n        // put filename into text under input-group\r\n        $(':file').on('fileselect', function (event, numFiles, label) {\r\n            var input = $(this).parents('.input-group').find(':text'),\r\n                log = numFiles > 1 ? numFiles + ' files selected' : label;\r\n\r\n            if (input.length) {\r\n                input.val(log);\r\n            } else {\r\n                if (log) alert(log);\r\n            }\r\n        });\r\n\r\n        $.ajax({\r\n            url: '/listFiles',\r\n            type: 'GET',\r\n            processData: false,\r\n            contentType: false,\r\n            success: function (dataArr) {\r\n                $.each(dataArr, function(idx, data) {\r\n                    console.log(\"file is \" + data.filename);\r\n                    histTable.row.add( [\r\n                        data.company,    \r\n                        DateFormat(new Date(data.generationTime), \"yyyy-mm-dd HH:MM:ss\"),\r\n                        data.filename,\r\n                        \"<span class=\\\"btn btn-primary dlbtn\\\">Download<span>\"\r\n                    ]);\r\n                });\r\n                histTable.draw(false);\r\n            },\r\n            error: function (jqXHR, textStatus, errorThrown) {\r\n                $(\"#modalTitle\").text(\"List Error\");\r\n                $(\"#modalText\").text(\"See Server logs for details. textStatus=\" + textStatus + \" errorThrown=\" + errorThrown);\r\n                $(\"#myModal\").modal(\"show\");\r\n            }\r\n        });\r\n        \r\n        \r\n    });\r\n\r\n    \r\n    $(document).on('click', '#genHistoryTable .dlbtn', function () {\r\n        startDownload($(this).closest(\"tr\").children('td:nth-child(3)').text());\r\n    } );\r\n\r\n    var startDownload = function (filename) {\r\n       // ajax doesn't handle file downloads elegantly\r\n        var req = new XMLHttpRequest();\r\n        req.open(\"POST\", \"/downloadFile\", true);\r\n        req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        req.responseType = \"blob\";\r\n        req.onreadystatechange = function () {\r\n          if (req.readyState === 4 && req.status === 200) {\r\n            // test for IE\r\n            if (typeof window.navigator.msSaveBlob === 'function') {\r\n              window.navigator.msSaveBlob(req.response, \"PdfName-\" + new Date().getTime() + \".pdf\");\r\n            } else {\r\n              var blob = req.response;\r\n              var link = document.createElement('a');\r\n              link.href = window.URL.createObjectURL(blob);\r\n              link.download = filename;\r\n              // append the link to the document body\r\n              document.body.appendChild(link);\r\n              link.click();\r\n            }\r\n          }\r\n        };\r\n        req.send(JSON.stringify({\"filename\" : filename }));\r\n    }\r\n\r\n\r\n\r\n}(jQuery);",
    "/*\r\n * Date Format 1.2.3\r\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n * MIT license\r\n *\r\n * Includes enhancements by Scott Trenda <scott.trenda.net>\r\n * and Kris Kowal <cixar.com/~kris.kowal/>\r\n *\r\n * Accepts a date, a mask, or a date and a mask.\r\n * Returns a formatted version of the given date.\r\n * The date defaults to the current date/time.\r\n * The mask defaults to dateFormat.masks.default.\r\n */\r\n\r\n(function(global) {\r\n  'use strict';\r\n\r\n  var dateFormat = (function() {\r\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g;\r\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\r\n      var timezoneClip = /[^-+\\dA-Z]/g;\r\n  \r\n      // Regexes and supporting functions are cached through closure\r\n      return function (date, mask, utc, gmt) {\r\n  \r\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\r\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\r\n          mask = date;\r\n          date = undefined;\r\n        }\r\n  \r\n        date = date || new Date;\r\n  \r\n        if(!(date instanceof Date)) {\r\n          date = new Date(date);\r\n        }\r\n  \r\n        if (isNaN(date)) {\r\n          throw TypeError('Invalid date');\r\n        }\r\n  \r\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\r\n  \r\n        // Allow setting the utc/gmt argument via the mask\r\n        var maskSlice = mask.slice(0, 4);\r\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\r\n          mask = mask.slice(4);\r\n          utc = true;\r\n          if (maskSlice === 'GMT:') {\r\n            gmt = true;\r\n          }\r\n        }\r\n  \r\n        var _ = utc ? 'getUTC' : 'get';\r\n        var d = date[_ + 'Date']();\r\n        var D = date[_ + 'Day']();\r\n        var m = date[_ + 'Month']();\r\n        var y = date[_ + 'FullYear']();\r\n        var H = date[_ + 'Hours']();\r\n        var M = date[_ + 'Minutes']();\r\n        var s = date[_ + 'Seconds']();\r\n        var L = date[_ + 'Milliseconds']();\r\n        var o = utc ? 0 : date.getTimezoneOffset();\r\n        var W = getWeek(date);\r\n        var N = getDayOfWeek(date);\r\n        var flags = {\r\n          d:    d,\r\n          dd:   pad(d),\r\n          ddd:  dateFormat.i18n.dayNames[D],\r\n          dddd: dateFormat.i18n.dayNames[D + 7],\r\n          m:    m + 1,\r\n          mm:   pad(m + 1),\r\n          mmm:  dateFormat.i18n.monthNames[m],\r\n          mmmm: dateFormat.i18n.monthNames[m + 12],\r\n          yy:   String(y).slice(2),\r\n          yyyy: y,\r\n          h:    H % 12 || 12,\r\n          hh:   pad(H % 12 || 12),\r\n          H:    H,\r\n          HH:   pad(H),\r\n          M:    M,\r\n          MM:   pad(M),\r\n          s:    s,\r\n          ss:   pad(s),\r\n          l:    pad(L, 3),\r\n          L:    pad(Math.round(L / 10)),\r\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\r\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\r\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\r\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\r\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\r\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\r\n          W:    W,\r\n          N:    N\r\n        };\r\n  \r\n        return mask.replace(token, function (match) {\r\n          if (match in flags) {\r\n            return flags[match];\r\n          }\r\n          return match.slice(1, match.length - 1);\r\n        });\r\n      };\r\n    })();\r\n\r\n  dateFormat.masks = {\r\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\r\n    'shortDate':             'm/d/yy',\r\n    'mediumDate':            'mmm d, yyyy',\r\n    'longDate':              'mmmm d, yyyy',\r\n    'fullDate':              'dddd, mmmm d, yyyy',\r\n    'shortTime':             'h:MM TT',\r\n    'mediumTime':            'h:MM:ss TT',\r\n    'longTime':              'h:MM:ss TT Z',\r\n    'isoDate':               'yyyy-mm-dd',\r\n    'isoTime':               'HH:MM:ss',\r\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\r\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\r\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\r\n  };\r\n\r\n  // Internationalization strings\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ],\r\n    monthNames: [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n    ],\r\n    timeNames: [\r\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\r\n    ]\r\n  };\r\n\r\nfunction pad(val, len) {\r\n  val = String(val);\r\n  len = len || 2;\r\n  while (val.length < len) {\r\n    val = '0' + val;\r\n  }\r\n  return val;\r\n}\r\n\r\n/**\r\n * Get the ISO 8601 week number\r\n * Based on comments from\r\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\r\n *\r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getWeek(date) {\r\n  // Remove time components of date\r\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n\r\n  // Change date to Thursday same week\r\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\r\n\r\n  // Take January 4th as it is always in week 1 (see ISO 8601)\r\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\r\n\r\n  // Change date to Thursday same week\r\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\r\n\r\n  // Check if daylight-saving-time-switch occurred and correct for it\r\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\r\n  targetThursday.setHours(targetThursday.getHours() - ds);\r\n\r\n  // Number of weeks between target Thursday and first Thursday\r\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\r\n  return 1 + Math.floor(weekDiff);\r\n}\r\n\r\n/**\r\n * Get ISO-8601 numeric representation of the day of the week\r\n * 1 (for Monday) through 7 (for Sunday)\r\n * \r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getDayOfWeek(date) {\r\n  var dow = date.getDay();\r\n  if(dow === 0) {\r\n    dow = 7;\r\n  }\r\n  return dow;\r\n}\r\n\r\n/**\r\n * kind-of shortcut\r\n * @param  {*} val\r\n * @return {String}\r\n */\r\nfunction kindOf(val) {\r\n  if (val === null) {\r\n    return 'null';\r\n  }\r\n\r\n  if (val === undefined) {\r\n    return 'undefined';\r\n  }\r\n\r\n  if (typeof val !== 'object') {\r\n    return typeof val;\r\n  }\r\n\r\n  if (Array.isArray(val)) {\r\n    return 'array';\r\n  }\r\n\r\n  return {}.toString.call(val)\r\n    .slice(8, -1).toLowerCase();\r\n};\r\n\r\n\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () {\r\n      return dateFormat;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = dateFormat;\r\n  } else {\r\n    global.dateFormat = dateFormat;\r\n  }\r\n})(this);\r\n",
    "//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n"
  ]
}