{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "app/fileUpload.js",
    "app/historical.js",
    "app/main.js",
    "node_modules/dateformat/lib/dateformat.js"
  ],
  "names": [],
  "mappingslLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACh
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var Historical = require('./historical.js');\r\n\r\n\"use strict\";\r\n\r\n// UPLOAD CLASS DEFINITION\r\n// ======================\r\nvar dropZone = document.getElementById('drop-zone');\r\nvar uploadForm = document.getElementById('js-upload-form');\r\nvar prefix = \"\";\r\nvar msg = \"\";\r\nvar filename = \"\";\r\n\r\nvar startUpload = function (files) {\r\n\r\n    // https://coligo.io/building-ajax-file-uploader-with-node/\r\n\r\n    if (files.length > 0) {\r\n        // One or more files selected, process the file upload\r\n\r\n        // create a FormData object which will be sent as the data payload in the\r\n        // AJAX request\r\n        var formData = new FormData();\r\n\r\n        // loop through all the selected files\r\n        for (var i = 0; i < files.length; i++) {\r\n            var file = files[i];\r\n\r\n            // add the files to formData object for the data payload\r\n            formData.append('file', file, file.name);\r\n            var spinHandle = loadingOverlay().activate();\r\n            $.ajax({\r\n                url: prefix + '/uploadFile',\r\n                type: 'POST',\r\n                data: formData,\r\n                processData: false,\r\n                contentType: false,\r\n                success: function (data) {\r\n                    loadingOverlay().cancel(spinHandle);\r\n                    $.notify({\r\n                        message: msg(data)\r\n                    }, {\r\n                            type: 'success'\r\n                        });\r\n                    Historical.listFiles();\r\n                },\r\n                error: function (jqXHR, textStatus, errorThrown) {\r\n                    console.log('error');\r\n                    loadingOverlay().cancel(spinHandle);\r\n                    $.notify({\r\n                        message: \"Operation failed. Debug info=\" + errorThrown\r\n                    }, {\r\n                            type: 'danger'\r\n                        });\r\n                }\r\n                /*xhr: function() {\r\n                    // create an XMLHttpRequest\r\n                    var xhr = new XMLHttpRequest();\r\n \r\n                    // listen to the 'progress' event\r\n                    xhr.upload.addEventListener('progress', function(evt) {\r\n \r\n                    if (evt.lengthComputable) {\r\n                        // calculate the percentage of upload completed\r\n                        var percentComplete = evt.loaded / evt.total;\r\n                        percentComplete = parseInt(percentComplete * 100);\r\n \r\n                        // update the Bootstrap progress bar with the new percentage\r\n                        $('.progress-bar').text(percentComplete + '%');\r\n                        $('.progress-bar').width(percentComplete + '%');\r\n \r\n                        // once the upload reaches 100%, set the progress bar text to done\r\n                        if (percentComplete === 100) {\r\n                            $('.progress-bar').html('Done');\r\n                            // spinner.spin();\r\n                            $(\".overlay\").fadeIn().append(spinner.el);\r\n                            // new Spinner({color:'#999', lines: 12}).spin($(\".overlay\"));\r\n \r\n                        }\r\n \r\n                    }\r\n \r\n                    }, false);\r\n \r\n                    return xhr;\r\n                }*/\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nvar startDownload = function (filename) {\r\n    // ajax doesn't handle file downloads elegantly\r\n    var req = new XMLHttpRequest();\r\n    req.open(\"POST\", prefix + \"/downloadFile\", true);\r\n    req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    req.responseType = \"blob\";\r\n    req.onreadystatechange = function () {\r\n        if (req.readyState === 4 && req.status === 200) {\r\n            // test for IE\r\n            if (typeof window.navigator.msSaveBlob === 'function') {\r\n                window.navigator.msSaveBlob(req.response, filename + \".zip\");\r\n            } else {\r\n                var blob = req.response;\r\n                var link = document.createElement('a');\r\n                link.href = window.URL.createObjectURL(blob);\r\n                link.download = filename;\r\n                // append the link to the document body\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            }\r\n        }\r\n    };\r\n    req.send(JSON.stringify({ \"filename\": filename }));\r\n}\r\n\r\nvar init = function (path, msgFn) {\r\n\r\n    prefix = path;\r\n    msg = msgFn;\r\n\r\n    // EVENT LISTENERS\r\n    // ===============\r\n    uploadForm.addEventListener('submit', function (f) {\r\n        var uploadFiles = document.getElementById('js-upload-files').files;\r\n        f.preventDefault()\r\n        startUpload(uploadFiles)\r\n    })\r\n\r\n    dropZone.ondrop = function (f) {\r\n        // prevent brower from really opening the file\r\n        f.preventDefault();\r\n        this.className = 'upload-drop-zone';\r\n        startUpload(f.dataTransfer.files)\r\n    }\r\n\r\n    dropZone.ondragover = function () {\r\n        this.className = 'upload-drop-zone drop';   // change css\r\n        return false;\r\n    }\r\n\r\n    dropZone.ondragleave = function () {\r\n        this.className = 'upload-drop-zone';\r\n        return false;\r\n    }\r\n\r\n    // flieselect event definition\r\n    // put filename into text under input-group\r\n    $(':file').on('fileselect', function (event, numFiles, label) {\r\n        var input = $(this).parents('.input-group').find(':text'),\r\n            log = numFiles > 1 ? numFiles + ' files selected' : label;\r\n\r\n        if (input.length) {\r\n            input.val(log);\r\n        } else {\r\n            if (log) alert(log);\r\n        }\r\n    });\r\n    \r\n    // We can attach the `fileselect` event to all file inputs on the page\r\n    $(document).on('change', ':file', function () {\r\n        var input = $(this),\r\n            numFiles = input.get(0).files ? input.get(0).files.length : 1,\r\n            label = input.val().replace(/\\\\/g, '/').replace(/.*\\//, '');\r\n        input.trigger('fileselect', [numFiles, label]);\r\n    });\r\n\r\n\r\n    $(document).on('click', '#genHistoryTable .dlbtn', function () {\r\n        startDownload($(this).closest(\"tr\").children('td:nth-child(4)').text());\r\n    });\r\n}\r\n\r\nmodule.exports.init = init;\r\n",
    "var DateFormat = require('dateformat');\r\n\r\n'use strict';\r\n\r\n// UPLOAD CLASS DEFINITION\r\n// ======================\r\nvar histTable = $('#genHistoryTable').DataTable({\r\n    \"paging\": false,\r\n    \"ordering\": false,\r\n    \"info\": false,\r\n    \"searching\": false\r\n});\r\n\r\n\r\n// AJAX FUNCTIONS\r\n// ===============\r\n\r\nvar listFiles = function () {\r\n    $.ajax({\r\n        url: '/listFiles',\r\n        type: 'GET',\r\n        processData: false,\r\n        contentType: false,\r\n        success: function (dataArr) {\r\n            var regen = false;\r\n            histTable.clear();\r\n            $.each(dataArr, function (idx, data) {\r\n                var statusText = \"\";\r\n                switch (data.status) {\r\n                    case \"EMAIL_SENT\":\r\n                        statusText = \"<span><i class=\\\"fas fa-envelope\\\" style=\\\"color:green\\\"></i></span>&nbsp;Email Sent\";\r\n                        break;\r\n                    case \"FAILED\":\r\n                        statusText = \"<span><i class=\\\"fas fa-exclamation-circle\\\" style=\\\"color:red\\\"></i></span>&nbsp;Failed\";\r\n                        break;\r\n                    case \"PENDING\":\r\n                        statusText = \"<span><i class=\\\"fas fa-cog blink\\\" style=\\\"color:grey\\\"></i></span>&nbsp;Pending\";\r\n                        regen = true;\r\n                        break;\r\n                    case \"GENERATING\":\r\n                        statusText = \"<span><i class=\\\"fas fa-cog blink\\\" style=\\\"color:grey\\\"></i></span>&nbsp;Generating\";\r\n                        regen = true;\r\n                        break;\r\n                }\r\n                histTable.row.add([\r\n                    data.company,\r\n                    DateFormat(new Date(data.generationTime), \"yyyy-mm-dd HH:MM:ss\"),\r\n                    statusText,\r\n                    \"<button type=\\\"button\\\" class=\\\"btn btn-primary dlbtn\\\">\" + data.filename + \".zip</button>\",\r\n                ]);\r\n            });\r\n            histTable.draw(false);\r\n            if(regen) {\r\n                setTimeout(listFiles, 10000);\r\n            }\r\n        },\r\n        error: function (jqXHR, textStatus, errorThrown) {\r\n            $.notify({\r\n                message: \"Historical listing failed, trying in 10 secs. Debug info=\" + errorThrown\r\n            }, {\r\n                    type: 'danger'\r\n                });\r\n        }\r\n    });\r\n}\r\n\r\nvar init = function () {\r\n    listFiles();\r\n\r\n    // initialize historical chart\r\n    var ctx = document.getElementById(\"myChart\");\r\n    var labels = ['January', 'February', 'March', 'April', 'May', 'June'];\r\n    var data = [20, 10, 30, 40, 50];\r\n    var myChart = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n            labels: labels,\r\n            datasets: [{\r\n                data: data,\r\n                borderColor: \"#3e95cd\",\r\n                fill: false\r\n            }]\r\n        },\r\n        options: {\r\n            legend: {\r\n                display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Reports Generated'\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports.init = init;\r\nmodule.exports.listFiles = listFiles;",
    "// var Spinner = require('spin');\r\nvar FileUpload = require('./fileUpload.js');\r\nvar Historical = require('./historical.js');\r\n\r\n+ function ($) {\r\n    'use strict';\r\n\r\n    // MAIN STARTUP FLOW\r\n    // ==================\r\n    $(document).ready(function () {\r\n\r\n        FileUpload.init(\"\", function(data) { return \"File upload success. Generation of \" + data.company + \" started.\"; });\r\n        Historical.init();\r\n\r\n    });\r\n\r\n}(jQuery);",
    "/*\r\n * Date Format 1.2.3\r\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n * MIT license\r\n *\r\n * Includes enhancements by Scott Trenda <scott.trenda.net>\r\n * and Kris Kowal <cixar.com/~kris.kowal/>\r\n *\r\n * Accepts a date, a mask, or a date and a mask.\r\n * Returns a formatted version of the given date.\r\n * The date defaults to the current date/time.\r\n * The mask defaults to dateFormat.masks.default.\r\n */\r\n\r\n(function(global) {\r\n  'use strict';\r\n\r\n  var dateFormat = (function() {\r\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g;\r\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\r\n      var timezoneClip = /[^-+\\dA-Z]/g;\r\n  \r\n      // Regexes and supporting functions are cached through closure\r\n      return function (date, mask, utc, gmt) {\r\n  \r\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\r\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\r\n          mask = date;\r\n          date = undefined;\r\n        }\r\n  \r\n        date = date || new Date;\r\n  \r\n        if(!(date instanceof Date)) {\r\n          date = new Date(date);\r\n        }\r\n  \r\n        if (isNaN(date)) {\r\n          throw TypeError('Invalid date');\r\n        }\r\n  \r\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\r\n  \r\n        // Allow setting the utc/gmt argument via the mask\r\n        var maskSlice = mask.slice(0, 4);\r\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\r\n          mask = mask.slice(4);\r\n          utc = true;\r\n          if (maskSlice === 'GMT:') {\r\n            gmt = true;\r\n          }\r\n        }\r\n  \r\n        var _ = utc ? 'getUTC' : 'get';\r\n        var d = date[_ + 'Date']();\r\n        var D = date[_ + 'Day']();\r\n        var m = date[_ + 'Month']();\r\n        var y = date[_ + 'FullYear']();\r\n        var H = date[_ + 'Hours']();\r\n        var M = date[_ + 'Minutes']();\r\n        var s = date[_ + 'Seconds']();\r\n        var L = date[_ + 'Milliseconds']();\r\n        var o = utc ? 0 : date.getTimezoneOffset();\r\n        var W = getWeek(date);\r\n        var N = getDayOfWeek(date);\r\n        var flags = {\r\n          d:    d,\r\n          dd:   pad(d),\r\n          ddd:  dateFormat.i18n.dayNames[D],\r\n          dddd: dateFormat.i18n.dayNames[D + 7],\r\n          m:    m + 1,\r\n          mm:   pad(m + 1),\r\n          mmm:  dateFormat.i18n.monthNames[m],\r\n          mmmm: dateFormat.i18n.monthNames[m + 12],\r\n          yy:   String(y).slice(2),\r\n          yyyy: y,\r\n          h:    H % 12 || 12,\r\n          hh:   pad(H % 12 || 12),\r\n          H:    H,\r\n          HH:   pad(H),\r\n          M:    M,\r\n          MM:   pad(M),\r\n          s:    s,\r\n          ss:   pad(s),\r\n          l:    pad(L, 3),\r\n          L:    pad(Math.round(L / 10)),\r\n          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\r\n          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\r\n          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\r\n          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\r\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\r\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\r\n          W:    W,\r\n          N:    N\r\n        };\r\n  \r\n        return mask.replace(token, function (match) {\r\n          if (match in flags) {\r\n            return flags[match];\r\n          }\r\n          return match.slice(1, match.length - 1);\r\n        });\r\n      };\r\n    })();\r\n\r\n  dateFormat.masks = {\r\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\r\n    'shortDate':             'm/d/yy',\r\n    'mediumDate':            'mmm d, yyyy',\r\n    'longDate':              'mmmm d, yyyy',\r\n    'fullDate':              'dddd, mmmm d, yyyy',\r\n    'shortTime':             'h:MM TT',\r\n    'mediumTime':            'h:MM:ss TT',\r\n    'longTime':              'h:MM:ss TT Z',\r\n    'isoDate':               'yyyy-mm-dd',\r\n    'isoTime':               'HH:MM:ss',\r\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\r\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\r\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\r\n  };\r\n\r\n  // Internationalization strings\r\n  dateFormat.i18n = {\r\n    dayNames: [\r\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\r\n    ],\r\n    monthNames: [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n    ],\r\n    timeNames: [\r\n      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'\r\n    ]\r\n  };\r\n\r\nfunction pad(val, len) {\r\n  val = String(val);\r\n  len = len || 2;\r\n  while (val.length < len) {\r\n    val = '0' + val;\r\n  }\r\n  return val;\r\n}\r\n\r\n/**\r\n * Get the ISO 8601 week number\r\n * Based on comments from\r\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\r\n *\r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getWeek(date) {\r\n  // Remove time components of date\r\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n\r\n  // Change date to Thursday same week\r\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\r\n\r\n  // Take January 4th as it is always in week 1 (see ISO 8601)\r\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\r\n\r\n  // Change date to Thursday same week\r\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\r\n\r\n  // Check if daylight-saving-time-switch occurred and correct for it\r\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\r\n  targetThursday.setHours(targetThursday.getHours() - ds);\r\n\r\n  // Number of weeks between target Thursday and first Thursday\r\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\r\n  return 1 + Math.floor(weekDiff);\r\n}\r\n\r\n/**\r\n * Get ISO-8601 numeric representation of the day of the week\r\n * 1 (for Monday) through 7 (for Sunday)\r\n * \r\n * @param  {Object} `date`\r\n * @return {Number}\r\n */\r\nfunction getDayOfWeek(date) {\r\n  var dow = date.getDay();\r\n  if(dow === 0) {\r\n    dow = 7;\r\n  }\r\n  return dow;\r\n}\r\n\r\n/**\r\n * kind-of shortcut\r\n * @param  {*} val\r\n * @return {String}\r\n */\r\nfunction kindOf(val) {\r\n  if (val === null) {\r\n    return 'null';\r\n  }\r\n\r\n  if (val === undefined) {\r\n    return 'undefined';\r\n  }\r\n\r\n  if (typeof val !== 'object') {\r\n    return typeof val;\r\n  }\r\n\r\n  if (Array.isArray(val)) {\r\n    return 'array';\r\n  }\r\n\r\n  return {}.toString.call(val)\r\n    .slice(8, -1).toLowerCase();\r\n};\r\n\r\n\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () {\r\n      return dateFormat;\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = dateFormat;\r\n  } else {\r\n    global.dateFormat = dateFormat;\r\n  }\r\n})(this);\r\n"
  ]
}